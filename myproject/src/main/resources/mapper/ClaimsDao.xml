<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myproject.dao.ClaimsDao">

    <resultMap type="myproject.entity.ClaimsEntity" id="claimsMap">
        <result property="id" column="id"/>
        <result property="adduserid" column="adduserid"/>
        <result property="addusername" column="addusername"/>
        <result property="billpicture" column="billpicture"/>
        <result property="shenhe" column="shenhe"/>
        <result property="shenhehuifu" column="shenhehuifu"/>
        <result property="remark" column="remark"/>
        <result property="addtime" column="addtime"/>
    </resultMap>
        <select id="selectValue" resultType="java.util.Map">
        SELECT ${params.xColumn}, sum(${params.yColumn}) total FROM claims 
        <where>${ew.sqlSegment}</where>
        group by ${params.xColumn}
        limit 10
    </select>
        <select id="selectTimeStatValue" resultType="java.util.Map">
        <if test='params.timeStatType == "日"'>
            SELECT DATE_FORMAT(${params.xColumn},'%Y-%m-%d') ${params.xColumn}, sum(${params.yColumn}) claims 
            FROM
            claims 
            <where>${ew.sqlSegment}</where>
            group by DATE_FORMAT(${params.xColumn},'%Y-%m-%d')
        </if>
        <if test='params.timeStatType == "月"'>
            SELECT DATE_FORMAT(${params.xColumn},'%Y-%m') ${params.xColumn}, sum(${params.yColumn}) claims  FROM
            claims 
            <where>${ew.sqlSegment}</where>
            group by DATE_FORMAT(${params.xColumn},'%Y-%m')
        </if>
        <if test='params.timeStatType == "年"'>
            SELECT DATE_FORMAT(${params.xColumn},'%Y') ${params.xColumn}, sum(${params.yColumn}) claims  FROM
            claims 
            <where>${ew.sqlSegment}</where>
            group by DATE_FORMAT(${params.xColumn},'%Y')
        </if>
        order by ${params.xColumn}
    </select>
        <select id="selectGroup" resultType="java.util.Map">
        SELECT ${params.column} , count(1) claims  FROM claims 
        <where>${ew.sqlSegment}</where>
        group by ${params.column}
        limit 10
    </select>
</mapper>